- name: grab facts for master node
  ec2_instance_facts:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_master": "{{ec2_name_prefix}}-master"
  register: master_node_facts

- name: grab facts for infra node
  ec2_instance_facts:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_infra": "{{ec2_name_prefix}}-infra"
  register: infra_node_facts

- name: grab facts for app1 node
  ec2_instance_facts:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_app1": "{{ec2_name_prefix}}-app1"
  register: app1_node_facts

- name: grab facts for app2 node
  ec2_instance_facts:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_app2": "{{ec2_name_prefix}}-app2"
  register: app2_node_facts

- name: grab facts for db node
  ec2_instance_facts:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_db": "{{ec2_name_prefix}}-db"
  register: db_node_facts

- name: create student OpenShift webpage
  template:
    src: ./templates/index_ocp.html.j2
    dest: "{{ playbook_dir }}/{{ ec2_name_prefix }}/{{ ec2_name_prefix|lower }}-index.html"

- name: create s3 bucket
  s3_bucket:
    name: "{{ec2_name_prefix|lower}}.{{workshop_dns_zone|lower}}"
    state: "{{ s3_state }}"
    region: "{{ec2_region}}"
    force: yes

- name: enable web hosting
  s3_website:
   name: "{{ec2_name_prefix|lower}}.{{workshop_dns_zone|lower}}"
   state: "{{ s3_state }}"
   region: "{{ec2_region}}"
   suffix: "{{ ec2_name_prefix|lower }}-index.html"
  register: s3_site

- name: DNS for student webpage
  route53:
    state: "{{ s3_state }}"
    zone: "{{workshop_dns_zone}}"
    record: "{{ec2_name_prefix|lower}}.{{workshop_dns_zone}}"
    type: CNAME
    overwrite: yes
    value: "{{ec2_name_prefix|lower}}.{{workshop_dns_zone}}.s3-website-{{ec2_region}}.amazonaws.com"
  when:
    - ec2_region == 'us-east-1'

- name: Wildcard DNS for student infra nodes 
  route53:
    state: "{{ s3_state }}"
    zone: "{{workshop_dns_zone}}"
    record: "{{ item.tags.AppDomain }}"
    type: A
    overwrite: yes
    value: "{{ item.public_ip_address }}"
  with_items: "{{ infra_node_facts.instances }}"

- name: PUT student webpage
  s3_sync:
    bucket: "{{ec2_name_prefix|lower}}.{{workshop_dns_zone}}"
    region: "{{ec2_region}}"
    file_root: "{{ playbook_dir }}/{{ec2_name_prefix}}"
    mime_map:
      .html: text/html
    permission: public-read
    include: "{{ ec2_name_prefix|lower }}-index.html"
